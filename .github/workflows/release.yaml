# .github/workflows/release.yml
# 最终的、简洁的工作流

name: Build and Release Geosite

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # 需要权限来创建Release和推送更新

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go Environment
        uses: actions/setup-go@v5
        with:
          go-version: '^1.22'
      
      # 步骤 1: 运行智能的Go程序
      # 它会自己决策，并把结果写入到 $GITHUB_OUTPUT
      - name: Build geosite and Generate Outputs
        id: build # 关键的 id，用于后续步骤引用其输出
        run: go run . # 只需简单运行，不再需要任何管道和脚本魔法

      # 步骤 2: 根据Go程序的决策结果，执行后续操作
      - name: Commit and Push Rule Set Updates
        # 只有在 build 步骤的输出 skip 不为 'true' 时才运行
        if: steps.build.outputs.skip != 'true'
        run: .github/release-rule-set.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate SHA256 Hashes
        if: steps.build.outputs.skip != 'true'
        run: |
          sha256sum geosite.db > geosite.db.sha256sum
          sha256sum geosite-cn.db > geosite-cn.db.sha256sum

      - name: Commit and Push Branch Updates
        if: steps.build.outputs.skip != 'true'
        run: .github/release-branch.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Older Releases
        if: steps.build.outputs.skip != 'true'
        uses: dev-drprasad/delete-older-releases@v1.1.0
        with:
          keep_latest: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 步骤 3: 创建新的 GitHub Release
      - name: Create New GitHub Release
        if: steps.build.outputs.skip != 'true'
        uses: softprops/action-gh-release@v2
        with:
          # 使用 build 步骤输出的 tag
          tag_name: ${{ steps.build.outputs.tag }}
          files: |
            geosite.db
            geosite.db.sha256sum
            geosite-cn.db
            geosite-cn.db.sha256sum
