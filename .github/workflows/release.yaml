# .github/workflows/release.yml
# 最终的、稳健的工作流（已移除失效的第三方Action）

name: Build and Release Geosite

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # 需要权限来创建Release和推送更新

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Go Environment
        uses: actions/setup-go@v5
        with:
          go-version: '^1.22'
      
      # 步骤 1: 运行智能的Go程序
      - name: Build geosite and Generate Outputs
        id: build
        run: go run .

      # 步骤 2: 根据Go程序的决策结果，执行后续操作
      - name: Commit and Push Rule Set Updates
        if: steps.build.outputs.skip != 'true'
        run: .github/release-rule-set.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate SHA256 Hashes
        if: steps.build.outputs.skip != 'true'
        run: |
          sha256sum geosite.db > geosite.db.sha256sum
          sha256sum geosite-cn.db > geosite-cn.db.sha256sum

      - name: Commit and Push Branch Updates
        if: steps.build.outputs.skip != 'true'
        run: .github/release-branch.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --- 这里是全新的、可靠的步骤 ---
      - name: Delete Older Releases using GitHub CLI
        if: steps.build.outputs.skip != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GITHUB_REPOSITORY 是一个内置变量，例如 "Jimmyzxk/sing-geosite"
          GH_REPO: ${{ github.repository }} 
        run: |
          echo "Fetching releases to delete..."
          # 1. 列出所有 releases (最多100个)，按创建时间倒序
          # 2. 用 `tail -n +11` 跳过最新的10个
          # 3. 提取出 tag name
          # 4. 循环遍历并删除
          gh release list --limit 100 --json tagName --jq '.[].tagName' | \
            tail -n +11 | \
            xargs -I {} gh release delete {} --cleanup-tag --yes
            
          echo "Old releases have been deleted."

      # 步骤 3: 创建新的 GitHub Release
      - name: Create New GitHub Release
        if: steps.build.outputs.skip != 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.build.outputs.tag }}
          files: |
            geosite.db
            geosite.db.sha256sum
            geosite-cn.db
            geosite-cn.db.sha256sum
